import org.echocat.gradle.plugins.golang.tasks.GolangTask
import org.echocat.gradle.plugins.golang.utils.Executor
import org.slf4j.*
/*
apply plugin: 'org.echocat.golang-minor'

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "org.echocat.gradle.plugins:gradle-golang-plugin:0.1.15-SNAPSHOT"
    }
}
*/

plugins {
  id "org.echocat.golang" version "0.1.14"
}

group 'github.com/echocat/gradle-golang-plugin/samples/simple-project'
version '0.1.1'


golang {
    build {
        definitions = [
                "${group}/bar.artifactId": "${group}:${name}:${version}",
                "main.artifactId"        : name,
                "main.version"           : version,
                "main.groupId"           : group,
        ]
    }
    dependencies {
        test 'gopkg.in/check.v1'
        tool 'github.com/golang/lint/golint'
        tool 'github.com/jstemmer/go-junit-report'
    }
    testing {
        coverProfile = "${buildDir}/testing/${name}.cover"
        coverProfileHtml = "${buildDir}/testing/${name}.cover.html"
    }
}

task moo(type: MooTask, dependsOn: golangTest)
golangBuild.dependsOn moo

class MooTask extends GolangTask {

    private static final Logger LOG = LoggerFactory.getLogger(MooTask.class)

    void run() throws Exception {
        Executor.executor(toolchain.goBinary, LOG)
            .arguments("version")
            .execute()
    }

}
